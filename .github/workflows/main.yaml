name: CI/CD - ms-saudacoes-aleatorias

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/ms-saudacoes-aleatorias
  KOYEB_APP: ${{ vars.KOYEB_APP || 'saudacoes-app' }}
  KOYEB_SERVICE: ${{ vars.KOYEB_SERVICE || 'saudacoes-svc' }}

jobs:
  build-lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Instalar golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Rodar lint
        run: golangci-lint run ./...

  test:
    name: Testes (go test)
    runs-on: ubuntu-latest
    needs: build-lint
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Rodar testes
        run: go test ./... -v

  release:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build & Push imagem
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            docker.io/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy no Koyeb
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Deploy to Koyeb
        uses: koyeb/action-git-deploy@v1
        with:
          api_token: ${{ secrets.KOYEB_TOKEN }}
          app_name: ${{ env.KOYEB_APP }}
          service_name: ${{ env.KOYEB_SERVICE }}
          docker_image: docker.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

    environment:
      name: production
      url: https://${{ env.KOYEB_SERVICE }}-${{ env.KOYEB_APP }}.koyeb.app

  cleanup:
    name: Cleanup Koyeb (manual)
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: cleanup
    steps:
      - name: Instalar Koyeb CLI
        run: |
          curl -fsSL https://www.koyeb.com/install.sh | bash
          echo "${{ secrets.KOYEB_TOKEN }}" | /root/.koyeb/bin/koyeb login --token -

      - name: Remover serviço do Koyeb
        run: |
          /root/.koyeb/bin/koyeb service delete "${{ env.KOYEB_APP }}/${{ env.KOYEB_SERVICE }}" --yes || true

      - name: Remover app do Koyeb
        run: |
          /root/.koyeb/bin/koyeb app delete "${{ env.KOYEB_APP }}" --yes || true
